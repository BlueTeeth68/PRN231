// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccess.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CarModelYear")
                        .HasColumnType("int");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.Property<decimal>("RentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 5,
                            CarModelYear = 2020,
                            CarName = "Toyota Camry",
                            Color = "Silver",
                            Description = "A comfortable sedan with advanced features",
                            ImportDate = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 1,
                            RentPrice = 100.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 2,
                            CarModelYear = 2021,
                            CarName = "Ferrari 488 GTB",
                            Color = "Red",
                            Description = "A powerful and luxurious sports car",
                            ImportDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 2,
                            RentPrice = 500.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 5,
                            CarModelYear = 2019,
                            CarName = "Mercedes-Benz E-Class",
                            Color = "Black",
                            Description = "A luxurious and elegant sedan",
                            ImportDate = new DateTime(2022, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 3,
                            RentPrice = 150.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 5,
                            CarModelYear = 2022,
                            CarName = "Tesla Model S",
                            Color = "White",
                            Description = "An electric car with cutting-edge technology",
                            ImportDate = new DateTime(2022, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 4,
                            RentPrice = 200.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 5,
                            CarModelYear = 2021,
                            CarName = "Toyota RAV4",
                            Color = "Blue",
                            Description = "A versatile and spacious SUV",
                            ImportDate = new DateTime(2022, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 1,
                            RentPrice = 120.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 2,
                            CarModelYear = 2023,
                            CarName = "Ferrari 812 Superfast",
                            Color = "Yellow",
                            Description = "An incredibly fast and powerful supercar",
                            ImportDate = new DateTime(2022, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 2,
                            RentPrice = 600.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 5,
                            CarModelYear = 2020,
                            CarName = "Mercedes-Benz GLE",
                            Color = "Silver",
                            Description = "A stylish and comfortable SUV",
                            ImportDate = new DateTime(2022, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 3,
                            RentPrice = 180.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 5,
                            CarModelYear = 2022,
                            CarName = "Tesla Model 3",
                            Color = "Red",
                            Description = "A popular electric car with great range",
                            ImportDate = new DateTime(2022, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 4,
                            RentPrice = 180.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 7,
                            CarModelYear = 2021,
                            CarName = "Toyota Highlander",
                            Color = "Gray",
                            Description = "A spacious and reliable SUV",
                            ImportDate = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 1,
                            RentPrice = 140.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 2,
                            CarModelYear = 2023,
                            CarName = "Ferrari F8 Tributo",
                            Color = "Black",
                            Description = "A stunning and high-performance sports car",
                            ImportDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 2,
                            RentPrice = 550.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            Capacity = 5,
                            CarModelYear = 2022,
                            CarName = "Mercedes-Benz S-Class",
                            Color = "White",
                            Description = "A flagship luxury sedan with advanced technology",
                            ImportDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 3,
                            RentPrice = 200.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            Capacity = 7,
                            CarModelYear = 2022,
                            CarName = "Tesla Model X",
                            Color = "Blue",
                            Description = "An electric SUV with falcon-wing doors",
                            ImportDate = new DateTime(2023, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 4,
                            RentPrice = 220.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            Capacity = 8,
                            CarModelYear = 2022,
                            CarName = "Toyota Land Cruiser",
                            Color = "Black",
                            Description = "A rugged and capable off-road SUV",
                            ImportDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 1,
                            RentPrice = 180.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            Capacity = 2,
                            CarModelYear = 2023,
                            CarName = "Ferrari SF90 Stradale",
                            Color = "Red",
                            Description = "A high-performance hybrid supercar",
                            ImportDate = new DateTime(2024, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 2,
                            RentPrice = 700.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            Capacity = 5,
                            CarModelYear = 2021,
                            CarName = "Mercedes-Benz G-Class",
                            Color = "White",
                            Description = "An iconic and luxurious SUV",
                            ImportDate = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 3,
                            RentPrice = 250.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            Capacity = 2,
                            CarModelYear = 2023,
                            CarName = "Tesla Roadster",
                            Color = "Red",
                            Description = "An all-electric sports car with incredible speed",
                            ImportDate = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 4,
                            RentPrice = 800.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            Capacity = 5,
                            CarModelYear = 2020,
                            CarName = "Toyota Camry",
                            Color = "Gray",
                            Description = "A reliable and fuel-efficient sedan",
                            ImportDate = new DateTime(2024, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 1,
                            RentPrice = 110.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            Capacity = 2,
                            CarModelYear = 2023,
                            CarName = "Ferrari 488 Pista",
                            Color = "Yellow",
                            Description = "A track-focused and high-performance supercar",
                            ImportDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 2,
                            RentPrice = 750.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            Capacity = 5,
                            CarModelYear = 2022,
                            CarName = "Mercedes-Benz CLA",
                            Color = "Black",
                            Description = "A compact and stylish luxury sedan",
                            ImportDate = new DateTime(2024, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 3,
                            RentPrice = 140.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            Capacity = 5,
                            CarModelYear = 2023,
                            CarName = "Tesla Model S Plaid",
                            Color = "White",
                            Description = "An ultra-fast and high-performance electric car",
                            ImportDate = new DateTime(2024, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerId = 4,
                            RentPrice = 350.00m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("DataAccess.Models.CarProducer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProducerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarProducers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street",
                            Country = "Japan",
                            ProducerName = "Toyota"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Park Avenue",
                            Country = "Italy",
                            ProducerName = "Ferrari"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Broadway",
                            Country = "Germany",
                            ProducerName = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = 4,
                            Address = "321 Elm Street",
                            Country = "United States",
                            ProducerName = "Tesla"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.CarRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickupDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CarId", "CustomerId", "PickupDate", "ReturnDate")
                        .IsUnique();

                    b.ToTable("CarRentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 12,
                            CustomerId = 1,
                            PickupDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentPrice = 480.00m,
                            ReturnDate = new DateTime(2023, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CarId = 17,
                            CustomerId = 2,
                            PickupDate = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentPrice = 440.00m,
                            ReturnDate = new DateTime(2023, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CarId = 13,
                            CustomerId = 3,
                            PickupDate = new DateTime(2023, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentPrice = 640.00m,
                            ReturnDate = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CarId = 19,
                            CustomerId = 4,
                            PickupDate = new DateTime(2023, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentPrice = 900.00m,
                            ReturnDate = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CarId = 14,
                            CustomerId = 1,
                            PickupDate = new DateTime(2023, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentPrice = 300.00m,
                            ReturnDate = new DateTime(2023, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CarId = 11,
                            CustomerId = 3,
                            PickupDate = new DateTime(2023, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentPrice = 2700.00m,
                            ReturnDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CarId = 19,
                            CustomerId = 2,
                            PickupDate = new DateTime(2023, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentPrice = 560.00m,
                            ReturnDate = new DateTime(2023, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CarId = 20,
                            CustomerId = 4,
                            PickupDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentPrice = 2000.00m,
                            ReturnDate = new DateTime(2023, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LicenceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "John Doe",
                            Email = "john.doe@example.com",
                            IdentityCard = "ABC123",
                            LicenceDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "XYZ987",
                            Mobile = "1234567890",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1985, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Jane Smith",
                            Email = "jane.smith@example.com",
                            IdentityCard = "DEF456",
                            LicenceDate = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "PQR654",
                            Mobile = "0987654321",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1992, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Alice Johnson",
                            Email = "alice.johnson@example.com",
                            IdentityCard = "GHI789",
                            LicenceDate = new DateTime(2022, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "LMN321",
                            Mobile = "9876543210",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1988, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Bob Williams",
                            Email = "bob.williams@example.com",
                            IdentityCard = "JKL987",
                            LicenceDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "STU456",
                            Mobile = "4567890123",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Eva Brown",
                            Email = "eva.brown@example.com",
                            IdentityCard = "MNO654",
                            LicenceDate = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "VWX789",
                            Mobile = "9012345678",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1983, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "David Wilson",
                            Email = "david.wilson@example.com",
                            IdentityCard = "PQR321",
                            LicenceDate = new DateTime(2020, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "YZA987",
                            Mobile = "6543210987",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1991, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Sophia Davis",
                            Email = "sophia.davis@example.com",
                            IdentityCard = "BCD789",
                            LicenceDate = new DateTime(2021, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "EFG654",
                            Mobile = "8901234567",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(1986, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Michael Johnson",
                            Email = "michael.johnson@example.com",
                            IdentityCard = "HIJ987",
                            LicenceDate = new DateTime(2018, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "KLM321",
                            Mobile = "3210987654",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(1993, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Olivia Taylor",
                            Email = "olivia.taylor@example.com",
                            IdentityCard = "NOP654",
                            LicenceDate = new DateTime(2021, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "QRS987",
                            Mobile = "7654321098",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 10,
                            Birthday = new DateTime(1987, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "William Anderson",
                            Email = "william.anderson@example.com",
                            IdentityCard = "RST321",
                            LicenceDate = new DateTime(2022, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicenceNumber = "UVW987",
                            Mobile = "2345678901",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewStar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId", "CarId")
                        .IsUnique();

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 12,
                            Comment = "The car was clean and comfortable. The overall experience was great.",
                            CustomerId = 1,
                            ReviewStar = 4
                        },
                        new
                        {
                            Id = 2,
                            CarId = 17,
                            Comment = "I loved the car! It was in excellent condition, and the service provided was outstanding.",
                            CustomerId = 2,
                            ReviewStar = 5
                        },
                        new
                        {
                            Id = 3,
                            CarId = 13,
                            Comment = "The car was average. It could have been cleaner, and the pickup process was a bit slow.",
                            CustomerId = 3,
                            ReviewStar = 3
                        },
                        new
                        {
                            Id = 4,
                            CarId = 19,
                            Comment = "The car was reliable and comfortable. Overall, a good experience.",
                            CustomerId = 4,
                            ReviewStar = 4
                        },
                        new
                        {
                            Id = 5,
                            CarId = 14,
                            Comment = "The car exceeded my expectations! It was clean, fuel-efficient, and perfect for my trip.",
                            CustomerId = 1,
                            ReviewStar = 5
                        },
                        new
                        {
                            Id = 6,
                            CarId = 11,
                            Comment = "I was disappointed with the car's condition. It had several maintenance issues and was not clean.",
                            CustomerId = 3,
                            ReviewStar = 2
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Car", b =>
                {
                    b.HasOne("DataAccess.Models.CarProducer", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("DataAccess.Models.CarRental", b =>
                {
                    b.HasOne("DataAccess.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DataAccess.Models.Review", b =>
                {
                    b.HasOne("DataAccess.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
